[
  {
    "path": "posts/2021-09-04-take-home-exercise-1/",
    "title": "take-home-exercise-1",
    "description": "Geospatial analytics on the development of covid-19 in Jarkarta, Indonesia.",
    "author": [
      {
        "name": "Xu Pengtai",
        "url": "https://www.linkedin.com/in/xupengtai/"
      }
    ],
    "date": "2021-09-04",
    "categories": [],
    "contents": "\n\n.main-container {\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n}\nGetting Started\ncreate a list of R packages required\n\n\npackages <- c('sf', 'tidyverse', 'tmap')\nfor (p in packages) {\n  if (!require(p, character.only = T)) {\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n## Loading required package: sf\n## Linking to GEOS 3.8.1, GDAL 3.2.1, PROJ 7.2.1\n## Loading required package: tidyverse\n## ── Attaching packages ─────────────────── tidyverse 1.3.1 ──\n## ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n## ✓ tibble  3.1.3     ✓ dplyr   1.0.7\n## ✓ tidyr   1.1.3     ✓ stringr 1.4.0\n## ✓ readr   2.0.0     ✓ forcats 0.5.1\n## ── Conflicts ────────────────────── tidyverse_conflicts() ──\n## x dplyr::filter() masks stats::filter()\n## x dplyr::lag()    masks stats::lag()\n## Loading required package: tmap\n\nData Import\naspatial: covid data by month\n\n\nsetwd(\"~/IS415_blog/_posts/2021-09-04-take-home-exercise-1\")\nlibrary(readxl)\ncovid_monthly <- read_excel(\"data/aspatial/covid_monthly.xlsx\")\n\n\n\n\ngeospatial: DKI Jarkarta\n\n\njarkarta <- st_read(\"./data/geospatial/BATAS DESA DESEMBER 2019 DUKCAPIL DKI JAKARTA/BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA.shp\")\n\n\n\n## Reading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source `/Users/pengtaixu/IS415_blog/_posts/2021-09-04-take-home-exercise-1/data/geospatial/BATAS DESA DESEMBER 2019 DUKCAPIL DKI JAKARTA/BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA.shp' \n##   using driver `ESRI Shapefile'\n## Simple feature collection with 269 features and 161 fields\n## Geometry type: MULTIPOLYGON\n## Dimension:     XY\n## Bounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\n## Geodetic CRS:  WGS 84\n\njarkarta_sel = jarkarta[,1:9]\n\n\n\nData Wrangling\nremove outer islands\n\n\njarkarta_main <- jarkarta_sel[!grepl(\"PULAU\", jarkarta_sel$DESA),]\nplot(st_geometry(jarkarta_main))\n\n\n\nleft join: covid_monthly + jarkarta_main\n\n\nnames(covid_monthly)[names(covid_monthly) == 'ID_KEL'] <- 'KODE_DESA'\njarkarta_covid <- merge(x = covid_monthly, y = jarkarta_main, by = \"KODE_DESA\", all.x = TRUE)\njarkarta_covid <- st_as_sf(jarkarta_covid)\njarkarta_covid <- jarkarta_covid[!is.na(jarkarta_covid$OBJECT_ID),]\n\n\n\n\nCalculations\ncalculate the cumulative confirmed cases per 10000 population\n\n\n\njarkarta_covid <- jarkarta_covid %>% mutate(CASE_RATE = POSITIF / (JUMLAH_PEN / 10000))\n\ncumulative_death_by_month <- aggregate(jarkarta_covid\\(<\/span><span class='va'>CASE_RATE<\/span>, by<span class='op'>=<\/span><span class='fu'><a href='https://rdrr.io/r/base/list.html'>list<\/a><\/span><span class='op'>(<\/span>Category<span class='op'>=<\/span><span class='va'>jarkarta_covid<\/span><span class='op'>\\)Date), FUN=mean) names(cumulative_death_by_month) <- c(“Date”, “Cumulative Case Rates”) print(cumulative_death_by_month) \n\n\n##          Date Cumulative Case Rates\n## 1  2020-03-31             0.7608927\n## 2  2020-04-30             3.3702865\n## 3  2020-05-31             5.4575059\n## 4  2020-06-30             8.7275655\n## 5  2020-07-31            14.0024393\n## 6  2020-08-31            25.2031728\n## 7  2020-09-30            51.5304429\n## 8  2020-10-31            76.9717084\n## 9  2020-11-30           103.0931858\n## 10 2020-12-31           142.6647998\n## 11 2021-01-31           212.3110015\n## 12 2021-02-27           278.2796102\n## 13 2021-03-31           318.4017212\n## 14 2021-04-30           318.4017212\n## 15 2021-05-31           362.2194383\n## 16 2021-06-30           465.2808297\n## 17 2021-07-31           705.3066398\n## 18 2021-08-31           705.3066398\n\ncalculate the cumulative death by month\n\n\n\njarkarta_covid <- jarkarta_covid %>% mutate(DEATH_RATE = Meninggal / (JUMLAH_PEN / 10000))\n\ncumulative_death_by_month <- aggregate(jarkarta_covid\\(<\/span><span class='va'>DEATH_RATE<\/span>, by<span class='op'>=<\/span><span class='fu'><a href='https://rdrr.io/r/base/list.html'>list<\/a><\/span><span class='op'>(<\/span>Category<span class='op'>=<\/span><span class='va'>jarkarta_covid<\/span><span class='op'>\\)Date), FUN=mean) names(cumulative_death_by_month) <- c(“Date”, “Cumulative Death Rates”) print(cumulative_death_by_month) \n\n\n##          Date Cumulative Death Rates\n## 1  2020-03-31             0.08094349\n## 2  2020-04-30             0.34819827\n## 3  2020-05-31             0.46113478\n## 4  2020-06-30             0.55789903\n## 5  2020-07-31             0.69121319\n## 6  2020-08-31             0.88272831\n## 7  2020-09-30             1.21924179\n## 8  2020-10-31             1.68455456\n## 9  2020-11-30             2.02190139\n## 10 2020-12-31             2.58311191\n## 11 2021-01-31             3.50570280\n## 12 2021-02-27             4.59829464\n## 13 2021-03-31             5.43802194\n## 14 2021-04-30             5.43802194\n## 15 2021-05-31             6.35020052\n## 16 2021-06-30             7.35146861\n## 17 2021-07-31            10.60192369\n## 18 2021-08-31            10.60192369\n\nPlots\nthematic mapping: cumulative confirmed cases rate\n\n\ntm_shape(jarkarta_covid) +\n  tm_polygons(\"CASE_RATE\") +\n  tm_facets(by = \"Date\")\n\n\n\n\nthematic mapping: cumulative death rate\n\n\ntm_shape(jarkarta_covid) +\n  tm_polygons(\"DEATH_RATE\") +\n  tm_facets(by = \"Date\")\n\n\n\n\nanalytical mapping: cumulative confirmed cases rate\n\n\n\nget.var <- function(vname,df) { v <- df[vname] %>% st_set_geometry(NULL) v <- unname(v[,1]) return(v) } # percent map  percentmap <- function(vnam, df, legtitle=NA, mtitle=“Percentile Map”){ percent <- c(0, .01, .1, .5, .9, .99, 1) var <- get.var(vnam,df) bperc <- quantile(var, percent) tm_shape(df) + tm_polygons() + tm_shape(df) + tm_fill(vnam,title=legtitle, breaks=bperc, palette=“Blues”, labels = c(“< 1%”, “1% - 10%”, “10% - 50%”, “50% - 90%”, “90% - 99%”, “> 99%”)) + tm_borders() + tm_layout(title = mtitle, title.position = c(“right”, “bottom”)) + tm_facets(by = “Date”) }\n\npercentmap(“CASE_RATE”, jarkarta_covid) \n\n\n\nanalytical mapping: cumulative death rate\n\n\npercentmap(\"DEATH_RATE\", jarkarta_covid)\n\n\n\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": "posts/2021-09-04-take-home-exercise-1/take-home-exercise-1_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2021-09-09T23:21:44+08:00",
    "input_file": "take-home-exercise-1.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IS415 blog",
    "description": "Welcome to our new blog, IS415 blog. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Xu Pengtai",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-08-23",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-30T08:59:08+08:00",
    "input_file": "welcome.knit.md"
  },
  {
    "path": "posts/2021-08-23-in-class-exercise-2/",
    "title": "In-class Exercise 2",
    "description": "In this hands-on exercise, I learn how to handle geospatial data in R by using sf package.",
    "author": [
      {
        "name": "Xu Pengtai",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-08-23",
    "categories": [],
    "contents": "\nGetting Started\ncreate a list of R packages required\n\n\npackages <- c('sf', 'tidyverse')\nfor (p in packages) {\n  if (!require(p, character.only = T)) {\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-23T11:28:59+08:00",
    "input_file": "in-class-exercise-2.knit.md"
  }
]
